/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.10.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { selectorFamily } from "recoil";
import { cosmWasmClient } from "./chain";
import { Batch, DenomResponse, Addr, Edge, ExecuteMsg, InstantiateMsg, Network, QueryMsg } from "./Obligatto2.types";
import { Obligatto2QueryClient } from "./Obligatto2.client";
type QueryClientParams = {
  contractAddress: string;
};
export const queryClient = selectorFamily<Obligatto2QueryClient, QueryClientParams>({
  key: "obligatto2QueryClient",
  get: ({
    contractAddress
  }) => ({
    get
  }) => {
    const client = get(cosmWasmClient);
    return new Obligatto2QueryClient(client, contractAddress);
  }
});
export const getDenomSelector = selectorFamily<GetDenomResponse, QueryClientParams & {
  params: Parameters<Obligatto2QueryClient["getDenom"]>;
}>({
  key: "obligatto2GetDenom",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.getDenom(...params);
  }
});
export const getOwnerSelector = selectorFamily<GetOwnerResponse, QueryClientParams & {
  params: Parameters<Obligatto2QueryClient["getOwner"]>;
}>({
  key: "obligatto2GetOwner",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.getOwner(...params);
  }
});
export const allEdgesSelector = selectorFamily<AllEdgesResponse, QueryClientParams & {
  params: Parameters<Obligatto2QueryClient["allEdges"]>;
}>({
  key: "obligatto2AllEdges",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.allEdges(...params);
  }
});
export const oneEdgeSelector = selectorFamily<OneEdgeResponse, QueryClientParams & {
  params: Parameters<Obligatto2QueryClient["oneEdge"]>;
}>({
  key: "obligatto2OneEdge",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.oneEdge(...params);
  }
});
export const oneBatchSelector = selectorFamily<OneBatchResponse, QueryClientParams & {
  params: Parameters<Obligatto2QueryClient["oneBatch"]>;
}>({
  key: "obligatto2OneBatch",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.oneBatch(...params);
  }
});
export const oneGraphSelector = selectorFamily<OneGraphResponse, QueryClientParams & {
  params: Parameters<Obligatto2QueryClient["oneGraph"]>;
}>({
  key: "obligatto2OneGraph",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.oneGraph(...params);
  }
});
export const getEdgesByAddressSelector = selectorFamily<GetEdgesByAddressResponse, QueryClientParams & {
  params: Parameters<Obligatto2QueryClient["getEdgesByAddress"]>;
}>({
  key: "obligatto2GetEdgesByAddress",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.getEdgesByAddress(...params);
  }
});
export const getEdgesAsCounterpartySelector = selectorFamily<GetEdgesAsCounterpartyResponse, QueryClientParams & {
  params: Parameters<Obligatto2QueryClient["getEdgesAsCounterparty"]>;
}>({
  key: "obligatto2GetEdgesAsCounterparty",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.getEdgesAsCounterparty(...params);
  }
});
export const getTotalDebtPerAddressSelector = selectorFamily<GetTotalDebtPerAddressResponse, QueryClientParams & {
  params: Parameters<Obligatto2QueryClient["getTotalDebtPerAddress"]>;
}>({
  key: "obligatto2GetTotalDebtPerAddress",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.getTotalDebtPerAddress(...params);
  }
});
export const getTotalCreditPerAddressSelector = selectorFamily<GetTotalCreditPerAddressResponse, QueryClientParams & {
  params: Parameters<Obligatto2QueryClient["getTotalCreditPerAddress"]>;
}>({
  key: "obligatto2GetTotalCreditPerAddress",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.getTotalCreditPerAddress(...params);
  }
});
export const getTotalDebtByGraphSelector = selectorFamily<GetTotalDebtByGraphResponse, QueryClientParams & {
  params: Parameters<Obligatto2QueryClient["getTotalDebtByGraph"]>;
}>({
  key: "obligatto2GetTotalDebtByGraph",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.getTotalDebtByGraph(...params);
  }
});
export const getTotalDebtSelector = selectorFamily<GetTotalDebtResponse, QueryClientParams & {
  params: Parameters<Obligatto2QueryClient["getTotalDebt"]>;
}>({
  key: "obligatto2GetTotalDebt",
  get: ({
    params,
    ...queryClientParams
  }) => async ({
    get
  }) => {
    const client = get(queryClient(queryClientParams));
    return await client.getTotalDebt(...params);
  }
});